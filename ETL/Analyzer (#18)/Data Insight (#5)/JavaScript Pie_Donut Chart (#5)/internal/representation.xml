<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="viewRepresentation">
<entry key="jsNamespace" type="xstring" value="pie_chart_namespace"/>
<config key="jsCode">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" value="(pie_chart_namespace = function() {%%00010%%00010%%00009var pie = {};%%00010%%00009var _representation, _value;%%00010%%00009var layoutContainer;%%00010%%00009var MIN_HEIGHT = 200, MIN_WIDTH = 300;%%00010%%00009var chart, svg;%%00010%%00009var knimeTable;%%00010%%00009%%00010%%00009var plotData;%%00010%%00009var colorRange;%%00010%%00009var excludeCat;%%00010%%00009var missValCatValue;%%00010%%00009%%00010%%00009var showWarnings;%%00010%%00009%%00010%%00009var MISSING_VALUES_ONLY = &quot;missingValuesOnly&quot;;%%00010%%00009var NO_DATA_AVAILABLE = &quot;noDataAvailable&quot;;%%00010%%00010%%00009pie.init = function(representation, value) {%%00010%%00009%%00009_representation = representation;%%00010%%00009%%00009_value = value;%%00010%%00009%%00009%%00010%%00009%%00009showWarnings = _representation.options.showWarnings;%%00010%%00009%%00009%%00010%%00009%%00009if (_representation.warnMessage &amp;&amp; showWarnings) {%%00010%%00009%%00009%%00009knimeService.setWarningMessage(_representation.warnMessage);%%00010%%00009%%00009}%%00010%%00010%%00009%%00009drawChart(false);%%00010%%00009%%00009if (_representation.options.enableViewControls) {%%00010%%00009%%00009%%00009drawControls();%%00010%%00009%%00009}%%00010%%00009}%%00010%%00010%%00009function drawChart(redraw) {%%00009%%00009%%00010%%00009%%00009// Parse the options%%00010%%00009%%00009var optTitle = _value.options[&quot;title&quot;];%%00010%%00009%%00009var optSubtitle = _value.options[&quot;subtitle&quot;];%%00010%%00010%%00009%%00009var showLabels = _value.options[&quot;showLabels&quot;];%%00010%%00009%%00009var labelThreshold = _representation.options[&quot;labelThreshold&quot;];%%00010%%00009%%00009var labelType = _value.options[&quot;labelType&quot;].toLowerCase();%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009var optDonutChart = _value.options[&quot;togglePie&quot;];%%00010%%00009%%00009var holeSize = _value.options[&quot;holeSize&quot;];%%00010%%00009%%00009var optInsideTitle = _value.options[&quot;insideTitle&quot;];%%00010%%00010%%00009%%00009var showLegend = _representation.options[&quot;legend&quot;];%%00010%%00010%%00009%%00009var optFullscreen = _representation.options[&quot;svg&quot;][&quot;fullscreen&quot;] &amp;&amp; _representation.runningInView;%%00010%%00009%%00009var optWidth = _representation.options[&quot;svg&quot;][&quot;width&quot;]%%00010%%00009%%00009var optHeight = _representation.options[&quot;svg&quot;][&quot;height&quot;]%%00010%%00009%%00009%%00010%%00009%%00009var isTitle = optTitle || optSubtitle;%%00010%%00010%%00009%%00009/*%%00010%%00009%%00009 * Setup interactive controls%%00010%%00009%%00009 */%%00010%%00010%%00009%%00009d3.selectAll(&quot;html, body&quot;).style(&quot;width&quot;, &quot;100%&quot;).style(&quot;height&quot;,%%00010%%00009%%00009%%00009%%00009&quot;100%&quot;).style(&quot;margin&quot;, &quot;0&quot;).style(&quot;padding&quot;, &quot;0&quot;);%%00010%%00010%%00009%%00009var body = d3.select(&quot;body&quot;);%%00010%%00010%%00009%%00009var width = optWidth + &quot;px&quot;;%%00010%%00009%%00009var height = optHeight + &quot;px&quot;;%%00010%%00009%%00009if (optFullscreen) {%%00010%%00009%%00009%%00009width = &quot;100%&quot;;%%00010%%00009%%00009%%00009height = (isTitle) ? &quot;100%&quot; : &quot;calc(100% - &quot; + knimeService.headerHeight() + &quot;px)&quot;;%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009var div;%%00010%%00009%%00009if (redraw) {%%00010%%00009%%00009%%00009d3.select(&quot;svg&quot;).remove();%%00010%%00009%%00009%%00009div = d3.select(&quot;#svgContainer&quot;);%%00010%%00009%%00009} else {%%00010%%00009%%00009%%00009layoutContainer = body.append(&quot;div&quot;)%%00010%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;layoutContainer&quot;)%%00010%%00009%%00009%%00009%%00009.style('display', 'block')%%00010%%00009%%00009%%00009%%00009.style(&quot;width&quot;, width)%%00010%%00009%%00009%%00009%%00009.style(&quot;height&quot;, height)%%00010%%00009%%00009%%00009%%00009.style(&quot;min-width&quot;, MIN_WIDTH + &quot;px&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;min-height&quot;, MIN_HEIGHT + &quot;px&quot;);%%00009%%00009%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009div = layoutContainer.append(&quot;div&quot;)%%00010%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;svgContainer&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;min-width&quot;, MIN_WIDTH + &quot;px&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;min-height&quot;, MIN_HEIGHT + &quot;px&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;box-sizing&quot;, &quot;border-box&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;overflow&quot;, &quot;hidden&quot;)%%00010%%00009%%00009%%00009%%00009.style(&quot;margin&quot;, &quot;0&quot;);%%00010%%00009%%00009}%%00010%%00010%%00009%%00009/*%%00010%%00009%%00009 * Process data%%00010%%00009%%00009 */%%00010%%00009%%00009knimeTable = new kt();%%00010%%00009%%00009// Add the data from the input port to the knimeTable.%%00010%%00009%%00009var port0dataTable = _representation.inObjects[0];%%00010%%00009%%00009knimeTable.setDataTable(port0dataTable);%%00010%%00009%%00009%%00010%%00009%%00009processData(true);%%00009%%00010%%00009%%00009setColorRange();%%00010%%00009%%00009%%00010%%00009%%00009// Create the SVG object%%00010%%00009%%00009var svg1 = document%%00010%%00009%%00009%%00009%%00009.createElementNS('http://www.w3.org/2000/svg', 'svg');%%00010%%00009%%00009div[0][0].appendChild(svg1);%%00010%%00010%%00009%%00009svg = d3.select(&quot;svg&quot;)%%00010%%00009%%00009%%00009.style(&quot;font-family&quot;, &quot;sans-serif&quot;)%%00010%%00009%%00009%%00009.style(&quot;display&quot;, &quot;block&quot;);%%00010%%00010%%00009%%00009if (!optFullscreen) {%%00010%%00009%%00009%%00009if (optWidth &gt; 0) {%%00010%%00009%%00009%%00009%%00009div.style(&quot;width&quot;, optWidth + &quot;px&quot;)%%00010%%00009%%00009%%00009%%00009svg.attr(&quot;width&quot;, optWidth);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (optHeight &gt; 0) {%%00010%%00009%%00009%%00009%%00009svg.attr(&quot;height&quot;, optHeight);%%00010%%00009%%00009%%00009%%00009div.style(&quot;height&quot;, optHeight + &quot;px&quot;);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009} else {%%00010%%00009%%00009%%00009// Set full screen height/width%%00010%%00009%%00009%%00009div.style(&quot;width&quot;, &quot;100%&quot;);%%00010%%00009%%00009%%00009div.style(&quot;height&quot;, height);%%00010%%00010%%00009%%00009%%00009svg.attr(&quot;width&quot;, &quot;100%&quot;);%%00010%%00009%%00009%%00009svg.attr(&quot;height&quot;, &quot;100%&quot;);%%00010%%00009%%00009}%%00010%%00009%%00010%%00009%%00009// Pie chart%%00010%%00009%%00009nv.addGraph(function() {%%00010%%00009%%00009%%00009chart = nv.models.pieChart()%%00010%%00009%%00009%%00009%%00009.x(function(d) { return d.label })%%00010%%00009%%00009%%00009%%00009.y(function(d) { return d.value })%%00010%%00009%%00009%%00009%%00009.color(colorRange)%%00010%%00009%%00009%%00009%%00009.duration(300)%%00010%%00009%%00009%%00009%%00009.showLegend(showLegend)%%00010%%00009%%00009%%00009%%00009.showLabels(showLabels)%%00010%%00009%%00009%%00009%%00009.labelThreshold(labelThreshold) %%00010%%00009%%00009%%00009%%00009.labelType(labelType); // &quot;key&quot;, &quot;value&quot; or &quot;percent&quot;%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009chart.width(optFullscreen ? &quot;100%&quot; : optWidth);%%00010%%00009%%00009%%00009chart.height(optFullscreen ? &quot;100%&quot; : optHeight);%%00010%%00009%%00009%%00009chart.margin({top: 0, bottom: 0, left: 20, right: 0});%%00010%%00010%%00009%%00009%%00009// TODO: Add a mechanism to remember the categories that are%%00010%%00009%%00009%%00009// switched on.%%00010%%00010%%00009%%00009%%00009chart.donut(optDonutChart);%%00010%%00009%%00009%%00009chart.donutRatio(holeSize);%%00010%%00009%%00009%%00009if (optInsideTitle) {%%00010%%00009%%00009%%00009%%00009chart.title(optInsideTitle);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009updateTitles(false);%%00010%%00010%%00009%%00009%%00009svg.datum(plotData).transition().duration(300).call(chart);%%00010%%00009%%00009%%00009nv.utils.windowResize(chart.update);%%00010%%00010%%00009%%00009%%00009return chart;%%00010%%00009%%00009});%%00010%%00009}%%00010%%00009%%00010%%00009function updateData(updateChart) {%%00010%%00009%%00009processData();%%00010%%00009%%00009if (updateChart) {%%00010%%00009%%00009%%00009chart.update();%%00010%%00009%%00009}%%00010%%00009}%%00010%%00009%%00010%%00009function updateTitles(updateChart) {%%00010%%00009%%00009if (chart) {%%00010%%00009%%00009%%00009var curTitle = d3.select(&quot;#title&quot;);%%00010%%00009%%00009%%00009var curSubtitle = d3.select(&quot;#subtitle&quot;);%%00010%%00009%%00009%%00009var chartNeedsUpdating = curTitle.empty() != !(_value.options.title) %%00010%%00009%%00009%%00009%%00009|| curSubtitle.empty() != !(_value.options.subtitle);%%00010%%00009%%00009%%00009if (!_value.options.title) {%%00010%%00009%%00009%%00009%%00009curTitle.remove();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (_value.options.title) {%%00010%%00009%%00009%%00009%%00009if (curTitle.empty()) {%%00010%%00009%%00009%%00009%%00009%%00009svg.append(&quot;text&quot;)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;x&quot;, 20)             %%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;y&quot;, 30)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;font-size&quot;, 24)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;title&quot;)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.text(_value.options.title);%%00010%%00009%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009%%00009curTitle.text(_value.options.title);%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (!_value.options.subtitle) {%%00010%%00009%%00009%%00009%%00009curSubtitle.remove();%%00010%%00009%%00009%%00009} %%00010%%00009%%00009%%00009if (_value.options.subtitle) {%%00010%%00009%%00009%%00009%%00009if (curSubtitle.empty()) {%%00010%%00009%%00009%%00009%%00009%%00009svg.append(&quot;text&quot;)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;x&quot;, 20)             %%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;y&quot;, _value.options.title ? 46 : 20)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;font-size&quot;, 12)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.attr(&quot;id&quot;, &quot;subtitle&quot;)%%00010%%00009%%00009%%00009%%00009%%00009%%00009.text(_value.options.subtitle);%%00010%%00009%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009%%00009curSubtitle.text(_value.options.subtitle)%%00010%%00009%%00009%%00009%%00009%%00009.attr(&quot;y&quot;, _value.options.title ? 46 : 20);%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009var topMargin = 10;%%00010%%00009%%00009%%00009topMargin += _value.options.title ? 10 : 0;%%00010%%00009%%00009%%00009topMargin += _value.options.subtitle ? 8 : 0;%%00010%%00009%%00009%%00009chart.legend.margin({top: topMargin, bottom: topMargin});%%00010%%00009%%00009%%00009chart.margin({top: topMargin, bottom: topMargin});%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009var isTitle = _value.options.title || _value.options.subtitle;%%00010%%00009%%00009%%00009knimeService.floatingHeader(isTitle);%%00009%%00009%%00009%%00010%%00009%%00009%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009if (updateChart &amp;&amp; chartNeedsUpdating) {%%00010%%00009%%00009%%00009%%00009if (_representation.options.svg.fullscreen &amp;&amp; _representation.runningInView ) {%%00010%%00009%%00009%%00009%%00009%%00009var height = (isTitle) ? &quot;100%&quot; : &quot;calc(100% - &quot; + knimeService.headerHeight() + &quot;px)&quot;;%%00010%%00009%%00009%%00009%%00009%%00009layoutContainer.style(&quot;height&quot;, height)%%00010%%00009%%00009%%00009%%00009%%00009%%00009// two rows below force to invalidate the container which solves a weird problem with vertical scroll bar in IE%%00010%%00009%%00009%%00009%%00009%%00009%%00009.style('display', 'none')%%00010%%00009%%00009%%00009%%00009%%00009%%00009.style('display', 'block');%%00010%%00009%%00009%%00009%%00009%%00009d3.select(&quot;#svgContainer&quot;).style(&quot;height&quot;, height); %%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009chart.update();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009}%%00010%%00009%%00010%%00009processData = function(setColorRange) {%%00010%%00009%%00009var optMethod = _representation.options[&quot;aggr&quot;];%%00010%%00009%%00009var optCat = _representation.options[&quot;cat&quot;];%%00010%%00009%%00009var optFreqCol = _value.options[&quot;freq&quot;];%%00010%%00009%%00009%%00010%%00009%%00009var categories = knimeTable.getColumn(optCat);%%00010%%00009%%00009%%00010%%00009%%00009var valCol;%%00010%%00009%%00009if (optMethod == &quot;Occurence\u00A0Count&quot;) {%%00010%%00009%%00009%%00009valCol = knimeTable.getColumn(1);%%00010%%00009%%00009} else {%%00010%%00009%%00009%%00009valCol = knimeTable.getColumn(optFreqCol);%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009plotData = [];%%00010%%00009%%00009excludeCat = [];%%00010%%00009%%00009missValCatValue = undefined;%%00010%%00009%%00009if (valCol.length &gt; 0) {%%00010%%00009%%00009%%00009var numDataPoints = valCol.length;%%00010%%00009%%00009%%00009for (var i = 0; i &lt; numDataPoints; i++) {%%00010%%00009%%00009%%00009%%00009var label = categories[i];%%00010%%00009%%00009%%00009%%00009var value = valCol[i];%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009if (label === null) {%%00010%%00009%%00009%%00009%%00009%%00009// missing values category%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009%%00009// save the value to append as the last item%%00009%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009%%00009missValCatValue = value;%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009%%00009continue;%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009if (value === null) {%%00010%%00009%%00009%%00009%%00009%%00009// category has only missing values - exclude it%%00010%%00009%%00009%%00009%%00009%%00009excludeCat.push(label);%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009%%00009continue;%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009var plotStream = {%%00010%%00009%%00009%%00009%%00009%%00009&quot;label&quot; : label,%%00010%%00009%%00009%%00009%%00009%%00009&quot;value&quot; : Math.abs(value)  // take abs value to prevent a damaged plot%%00010%%00009%%00009%%00009%%00009};%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009plotData.push(plotStream);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009processMissingValues(false);%%00010%%00009}%%00010%%00009%%00010%%00009setColorRange = function() {%%00010%%00009%%00009var numCat = plotData.length;%%00010%%00009%%00009if (missValCatValue !== undefined &amp;&amp; missValCatValue !== null) {%%00010%%00009%%00009%%00009// We don't want the option &quot;includeMissValCat&quot; to influence on the number of categories,%%00010%%00009%%00009%%00009// because the option can be changed in the view and the color scale then can also be changed (if a border case) - and we don't want this.%%00010%%00009%%00009%%00009// Hence, only the real value matters.%%00010%%00009%%00009%%00009numCat++;%%00010%%00009%%00009}%%00010%%00009%%00009if (_representation.options.customColors) {%%00010%%00009%%00009%%00009colorRange = [];%%00010%%00009%%00009%%00009for (var i = 0; i &lt; numCat; i++) {%%00010%%00009%%00009%%00009%%00009var color = knimeTable.getRowColors()[i];%%00010%%00009%%00009%%00009%%00009if (!color) {%%00010%%00009%%00009%%00009%%00009%%00009color = &quot;#7C7C7C&quot;;%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009colorRange.push(color);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009} else {%%00010%%00009%%00009%%00009var colorScale;%%00010%%00009%%00009%%00009if (numCat &gt; 10) {%%00010%%00009%%00009%%00009%%00009colorScale = d3.scale.category20();%%00010%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009colorScale = d3.scale.category10();%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009colorRange = colorScale.range();%%00010%%00009%%00009}%%00010%%00009}%%00010%%00009%%00010%%00009/**%%00010%%00009 * switched - if the chart update was triggered by changing the &quot;include 'Missing values' category&quot; option in the view%%00010%%00009 */%%00010%%00009processMissingValues = function(switched) {%%00010%%00009%%00009// Missing values post-processing%%00009%%00010%%00009%%00009if (missValCatValue !== undefined) {  // undefined means there's no missing value in the category column at all%%00010%%00009%%00009%%00009if (_value.options.includeMissValCat &amp;&amp; _representation.options.reportOnMissingValues) {%%00010%%00009%%00009%%00009%%00009// add missing values category%%00010%%00009%%00009%%00009%%00009var label = &quot;Missing values&quot;;%%00010%%00009%%00009%%00009%%00009if (missValCatValue !== null) {%%00010%%00009%%00009%%00009%%00009%%00009plotData.push({&quot;label&quot;: label, &quot;value&quot;: missValCatValue});%%00010%%00009%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009%%00009excludeCat.push(label);%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009} else if (switched) {%%00010%%00009%%00009%%00009%%00009// remove missing values category, but only if we have triggered switch from the view%%00010%%00009%%00009%%00009%%00009// otherwise there's nothing to remove yet%%00010%%00009%%00009%%00009%%00009if (missValCatValue !== null) {%%00010%%00009%%00009%%00009%%00009%%00009plotData.pop();%%00010%%00009%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009%%00009excludeCat.pop();%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00010%%00009%%00009// Set warning messages%%00010%%00009%%00009if (!showWarnings) {%%00010%%00009%%00009%%00009return;%%00010%%00009%%00009}%%00010%%00009%%00009if (plotData.length == 0) {%%00010%%00009%%00009%%00009// No data available warnings%%00010%%00009%%00009%%00009var str;%%00010%%00009%%00009%%00009if (missValCatValue !== undefined &amp;&amp; missValCatValue !== null &amp;&amp; _representation.options.reportOnMissingValues) {%%00010%%00009%%00009%%00009%%00009str = &quot;No chart was generated since the frequency column has only missing values.\nThere are values where the category name is missing.\nTo see them switch on the option \&quot;Include 'Missing values' category\&quot; in the view settings.&quot;;%%00010%%00009%%00009%%00009} else {%%00010%%00009%%00009%%00009%%00009str = &quot;No chart was generated since the frequency column has only missing values or empty.\nRe-run the workflow with different data.&quot;;%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009knimeService.setWarningMessage(str, NO_DATA_AVAILABLE);%%00010%%00009%%00009} else if (excludeCat.length &gt; 0 &amp;&amp; _representation.options.reportOnMissingValues) {%%00010%%00009%%00009%%00009knimeService.setWarningMessage(&quot;Categories '&quot; + excludeCat.join(&quot;', '&quot;) + &quot;' have only missing values in the frequency column and were excluded from the view.&quot;, MISSING_VALUES_ONLY)%%00010%%00009%%00009} else {%%00010%%00009%%00009%%00009knimeService.clearWarningMessage(MISSING_VALUES_ONLY);%%00010%%00009%%00009}%%00009%%00010%%00009}%%00010%%00009%%00009%%00010%%00009drawControls = function() {%%00009%%00009%%00010%%00009%%00009if (!knimeService) {%%00010%%00009%%00009%%00009// TODO: error handling?%%00010%%00009%%00009%%00009return;%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009%%00009if (_representation.displayFullscreenButton) {%%00010%%00009%%00009%%00009knimeService.allowFullscreen();%%00010%%00009%%00009}%%00010%%00009%%00009%%00010%%00009    if (!_representation.options.enableViewControls) return;%%00010%%00009    %%00010%%00009    var titleEdit = _representation.options.enableTitleEdit;%%00010%%00009%%00009var subtitleEdit = _representation.options.enableSubtitleEdit;%%00010%%00009%%00009var donutToggle = _representation.options.enableDonutToggle;%%00010%%00009%%00009var holeEdit = _representation.options.enableHoleEdit;%%00010%%00009%%00009//var insideTitleEdit = _representation.options.enableInsideTitleEdit;%%00010%%00009%%00009//var colChooser = _representation.options.enableColumnChooser;%%00010%%00009%%00009var labelEdit = _representation.options.enableLabelEdit;%%00010%%00009%%00009var switchMissValCat = _representation.options.enableSwitchMissValCat;%%00010%%00009    %%00010%%00009    if (titleEdit || subtitleEdit) {%%00009    %%00009    %%00010%%00009    %%00009if (titleEdit) {%%00010%%00009    %%00009%%00009var chartTitleText = knimeService.createMenuTextField('chartTitleText', _value.options.title, function() {%%00010%%00009    %%00009%%00009%%00009if (_value.options.title != this.value) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009_value.options.title = this.value;%%00010%%00009%%00009%%00009%%00009%%00009%%00009updateTitles(true);%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009    %%00009%%00009}, true);%%00010%%00009    %%00009%%00009knimeService.addMenuItem('Chart Title:', 'header', chartTitleText);%%00010%%00009    %%00009}%%00010%%00009    %%00009if (subtitleEdit) {%%00010%%00009    %%00009%%00009var chartSubtitleText = knimeService.createMenuTextField('chartSubtitleText', _value.options.subtitle, function() {%%00010%%00009    %%00009%%00009%%00009if (_value.options.subtitle != this.value) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009_value.options.subtitle = this.value;%%00010%%00009%%00009%%00009%%00009%%00009%%00009updateTitles(true);%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009    %%00009%%00009}, true);%%00010%%00009    %%00009%%00009var mi = knimeService.addMenuItem('Chart Subtitle:', 'header', chartSubtitleText, null, knimeService.SMALL_ICON);%%00010%%00009    %%00009}%%00009%%00010%%00009    %%00009if (/*colChooser ||*/ labelEdit || donutToggle || holeEdit /*|| insideTitleEdit*/) {%%00010%%00009    %%00009%%00009knimeService.addMenuDivider();%%00010%%00009    %%00009}%%00010%%00009    }%%00010%%00009    %%00010%%00009    /*if (colChooser) {%%00010%%00009    %%00009// filter out non number columns%%00010%%00009    %%00009var colNames = _representation.inObjects[0].spec.colNames;%%00010%%00009%%00009%%00009var colTypes = _representation.inObjects[0].spec.colTypes;%%00010%%00009%%00009%%00009var numberColumns = [];%%00010%%00009%%00009%%00009for (var i = 0; i &lt; colNames.length; i++) {%%00010%%00009%%00009%%00009%%00009if (colTypes[i] == &quot;number&quot;) {%%00010%%00009%%00009%%00009%%00009%%00009numberColumns.push(colNames[i]);%%00009%%00009%%00009%%00009%%00009%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009}%%00010    %%00009%%00009var colSelect = knimeService.createMenuSelect('columnSelect', _value.options.freq, numberColumns, function() {%%00010    %%00009%%00009%%00009_value.options.freq = this.value;%%00010%%00009%%00009%%00009%%00009updateData(true);%%00010    %%00009%%00009});%%00010    %%00009%%00009knimeService.addMenuItem('Column:', 'minus-square fa-rotate-90', colSelect);%%00010    %%00009%%00009%%00010    %%00009%%00009if (labelEdit || donutToggle || holeEdit || insideTitleEdit) {%%00010%%00009    %%00009%%00009knimeService.addMenuDivider();%%00010%%00009    %%00009}%%00010        }*/%%00010%%00009    %%00010%%00009    if (labelEdit) {%%00010%%00009    %%00009var labelCbx = knimeService.createMenuCheckbox('labelCbx', _value.options.showLabels, function () {%%00010%%00009    %%00009%%00009if (_value.options.showLabels != this.checked) {%%00010%%00009%%00009%%00009%%00009%%00009_value.options.showLabels = this.checked;%%00010%%00009%%00009%%00009%%00009%%00009chart.showLabels(this.checked);%%00010%%00009%%00009%%00009%%00009%%00009d3.selectAll(&quot;#labelType input&quot;).property(&quot;disabled&quot;, !_value.options.showLabels);%%00010%%00009%%00009%%00009%%00009%%00009//workaround for nvd3 bug, remove labels manually%%00010%%00009%%00009%%00009%%00009%%00009if (!this.checked) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009d3.selectAll(&quot;.nv-pieLabels *&quot;).remove();%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009chart.update();%%00010%%00009%%00009%%00009%%00009}%%00010%%00009    %%00009});%%00010%%00009    %%00009knimeService.addMenuItem('Show labels:', 'comment-o', labelCbx);%%00010%%00009    %%00009%%00010%%00009    %%00009var labelTypeRadio = knimeService.createInlineMenuRadioButtons('labelType', 'labelType', 'Value', ['Key', 'Value', 'Percent'], function() {%%00010%%00009    %%00009%%00009_value.options.labelType = this.value;%%00010%%00009%%00009%%00009%%00009chart.labelType(this.value.toLowerCase());%%00010%%00009%%00009%%00009%%00009chart.update();%%00010%%00009    %%00009});%%00010%%00009    %%00009knimeService.addMenuItem('Label type:', 'commenting-o', labelTypeRadio);%%00010%%00009    %%00009%%00010%%00009%%00009    if (switchMissValCat || donutToggle || holeEdit || insideTitleEdit) {%%00010%%00009    %%00009%%00009knimeService.addMenuDivider();%%00010%%00009    %%00009}%%00010%%00009    }%%00010%%00009    %%00010%%00009    if (switchMissValCat &amp;&amp; missValCatValue !== undefined &amp;&amp; _representation.options.reportOnMissingValues) {%%00010%%00009    %%00009var switchMissValCatCbx = knimeService.createMenuCheckbox('switchMissValCatCbx', _value.options.includeMissValCat, function() {%%00010%%00009    %%00009%%00009if (_value.options.includeMissValCat != this.checked) {%%00010%%00009    %%00009%%00009%%00009_value.options.includeMissValCat = this.checked;%%00010%%00009    %%00009%%00009%%00009processMissingValues(true);%%00010%%00009    %%00009%%00009%%00009chart.update();%%00010%%00009    %%00009%%00009}%%00010%%00009    %%00009});%%00010%%00009    %%00009knimeService.addMenuItem(&quot;Include 'Missing values' category: &quot;, 'question', switchMissValCatCbx);%%00010%%00009    %%00009%%00010%%00009    %%00009if (donutToggle || holeEdit || insideTitleEdit) {%%00010%%00009    %%00009%%00009knimeService.addMenuDivider();%%00010%%00009    %%00009}%%00010%%00009    }%%00010%%00009    %%00010%%00009    if (donutToggle || holeEdit /*|| insideTitleEdit*/) {%%00010%%00009    %%00009if (donutToggle) {%%00010%%00009%%00009    %%00009var donutCbx = knimeService.createMenuCheckbox('donutCbx', _value.options.togglePie, function () {%%00010%%00009%%00009    %%00009%%00009if (_value.options.togglePie != this.checked) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009_value.options.togglePie = this.checked;%%00010%%00009%%00009%%00009%%00009%%00009%%00009chart.donut(this.checked);%%00010%%00009%%00009%%00009%%00009%%00009%%00009d3.selectAll(&quot;#insideTitleText, #holeRatioText&quot;).property(&quot;disabled&quot;, !_value.options.togglePie);%%00010%%00009%%00009%%00009%%00009%%00009%%00009chart.update();%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009    %%00009});%%00010%%00009%%00009    %%00009knimeService.addMenuItem('Render donut chart:', knimeService.createStackedIcon('gear', 'circle-o'), donutCbx);%%00010%%00009    %%00009}%%00010%%00009    %%00009%%00010%%00009    %%00009if (holeEdit) {%%00010%%00009    %%00009%%00009var holeRatioText = knimeService.createMenuTextField('holeRatioText', _value.options.holeSize, function() {%%00010%%00009    %%00009%%00009%%00009if (this.value &lt; 0) {%%00010    %%00009%%00009%%00009%%00009%%00009this.value = 0;%%00010    %%00009%%00009%%00009%%00009} else if (this.value &gt; 1) {%%00010    %%00009%%00009%%00009%%00009%%00009this.value = 1;%%00010    %%00009%%00009%%00009%%00009}%%00010    %%00009%%00009%%00009%%00009chart.donutRatio(this.value);%%00010    %%00009%%00009%%00009%%00009chart.update();%%00010%%00009    %%00009%%00009}, true);%%00010%%00009    %%00009%%00009holeRatioText.setAttribute(&quot;type&quot;, &quot;number&quot;);%%00010%%00009    %%00009%%00009holeRatioText.setAttribute(&quot;min&quot;, 0);%%00010%%00009    %%00009%%00009holeRatioText.setAttribute(&quot;max&quot;, 1);%%00010%%00009    %%00009%%00009holeRatioText.setAttribute(&quot;step&quot;, 0.1);%%00010%%00009    %%00009%%00009holeRatioText.disabled = !_value.options.togglePie;%%00010%%00009    %%00009%%00009knimeService.addMenuItem('Donut hole ratio:', 'adjust', holeRatioText);%%00010%%00009    %%00009}%%00010%%00009    %%00009%%00010%%00009    %%00009/*if (insideTitleEdit) {%%00010%%00009    %%00009%%00009var insideTitleText = knimeService.createMenuTextField('insideTitleText', _value.options.insideTitle, function() {%%00010%%00009    %%00009%%00009%%00009if (_value.options.insideTitle != this.value) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009_value.options.insideTitle = this.value;%%00010%%00009%%00009%%00009%%00009%%00009%%00009chart.title(this.value);%%00010%%00009%%00009%%00009%%00009%%00009%%00009chart.update();%%00010%%00009%%00009%%00009%%00009%%00009}%%00010%%00009    %%00009%%00009}, true);%%00010%%00009    %%00009%%00009insideTitleText.disabled = !_value.options.togglePie;%%00010%%00009    %%00009%%00009knimeService.addMenuItem('Title inside:', 'header', insideTitleText, null, knimeService.SMALL_ICON);%%00010%%00009    %%00009}*/%%00010    %%00009}%%00010%%00009};%%00010%%00010%%00009pie.validate = function() {%%00010%%00009%%00009return true;%%00010%%00009}%%00010%%00010%%00009pie.getComponentValue = function() {%%00010%%00009%%00009return _value;%%00010%%00009}%%00010%%00010%%00009pie.getSVG = function() {%%00010%%00009%%00009// inline global style declarations for SVG export%%00010%%00009%%00009var styles = document.styleSheets;%%00010%%00009%%00009for (i = 0; i &lt; styles.length; i++) {%%00010%%00009%%00009%%00009if (!styles[i].cssRules &amp;&amp; styles[i].rules) {%%00010%%00009%%00009%%00009%%00009styles[i].cssRules = styles[i].rules;%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009// empty style declaration%%00010%%00009%%00009%%00009if (!styles[i].cssRules) continue;%%00010%%00009%%00009%%00009%%00010%%00009%%00009%%00009for (var j = 0; j &lt; styles[i].cssRules.length; j++) {%%00010%%00009%%00009%%00009%%00009try {%%00010%%00009%%00009%%00009%%00009%%00009var rule = styles[i].cssRules[j];%%00010%%00009%%00009%%00009%%00009%%00009d3.selectAll(rule.selectorText).each(function(){%%00010%%00009%%00009%%00009%%00009%%00009%%00009for (var k = 0; k &lt; rule.style.length; k++) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009var curStyle = this.style.getPropertyValue(rule.style[k]);%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009var curPrio = this.style.getPropertyPriority(rule.style[k]);%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009var rulePrio = rule.style.getPropertyPriority(rule.style[k]);%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009//only overwrite style if not set or priority is overruled%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009if (!curStyle || (curPrio != &quot;important&quot; &amp;&amp; rulePrio == &quot;important&quot;)) {%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009%%00009d3.select(this).style(rule.style[k], rule.style[rule.style[k]]);%%00010%%00009%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009%%00009%%00009});%%00010%%00009%%00009%%00009%%00009} catch(exception) {%%00010%%00009%%00009%%00009%%00009%%00009continue;%%00010%%00009%%00009%%00009%%00009}%%00010%%00009%%00009%%00009}%%00010%%00009%%00009}%%00010%%00009%%00009// correct faulty rect elements%%00010%%00009%%00009d3.selectAll(&quot;rect&quot;).each(function() {%%00010%%00009%%00009%%00009var rect = d3.select(this);%%00010%%00009%%00009%%00009if (!rect.attr(&quot;width&quot;)) {%%00010%%00009%%00009%%00009%%00009rect.attr(&quot;width&quot;, 0);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009%%00009if (!rect.attr(&quot;height&quot;)) {%%00010%%00009%%00009%%00009%%00009rect.attr(&quot;height&quot;, 0);%%00010%%00009%%00009%%00009}%%00010%%00009%%00009});%%00010%%00009%%00009var svgElement = d3.select(&quot;svg&quot;)[0][0];%%00010%%00009%%00009// Return the SVG as a string.%%00010%%00009%%00009return (new XMLSerializer()).serializeToString(svgElement);%%00010%%00009}%%00010%%00010%%00009return pie;%%00010%%00010}());"/>
</config>
<config key="cssCode">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" value=".nvd3 .nv-axis{pointer-events:none;opacity:1}.nvd3 .nv-axis path{fill:none;stroke:#000;stroke-opacity:.75;shape-rendering:crispEdges}.nvd3 .nv-axis path.domain{stroke-opacity:.75}.nvd3 .nv-axis.nv-x path.domain{stroke-opacity:0}.nvd3 .nv-axis line{fill:none;stroke:#e5e5e5;shape-rendering:crispEdges}.nvd3 .nv-axis .zero line,.nvd3 .nv-axis line.zero{stroke-opacity:.75}.nvd3 .nv-axis .nv-axisMaxMin text{font-weight:700}.nvd3 .x .nv-axis .nv-axisMaxMin text,.nvd3 .x2 .nv-axis .nv-axisMaxMin text,.nvd3 .x3 .nv-axis .nv-axisMaxMin text{text-anchor:middle}.nvd3 .nv-axis.nv-disabled{opacity:0}.nvd3 .nv-bars rect{fill-opacity:.75;transition:fill-opacity 250ms linear;-moz-transition:fill-opacity 250ms linear;-webkit-transition:fill-opacity 250ms linear}.nvd3 .nv-bars rect.hover{fill-opacity:1}.nvd3 .nv-bars .hover rect{fill:#add8e6}.nvd3 .nv-bars text{fill:rgba(0,0,0,0)}.nvd3 .nv-bars .hover text{fill:rgba(0,0,0,1)}.nvd3 .nv-multibar .nv-groups rect,.nvd3 .nv-multibarHorizontal .nv-groups rect,.nvd3 .nv-discretebar .nv-groups rect{stroke-opacity:0;transition:fill-opacity 250ms linear;-moz-transition:fill-opacity 250ms linear;-webkit-transition:fill-opacity 250ms linear}.nvd3 .nv-multibar .nv-groups rect:hover,.nvd3 .nv-multibarHorizontal .nv-groups rect:hover,.nvd3 .nv-candlestickBar .nv-ticks rect:hover,.nvd3 .nv-discretebar .nv-groups rect:hover{fill-opacity:1}.nvd3 .nv-discretebar .nv-groups text,.nvd3 .nv-multibarHorizontal .nv-groups text{font-weight:700;fill:rgba(0,0,0,1);stroke:rgba(0,0,0,0)}.nvd3 .nv-boxplot circle{fill-opacity:.5}.nvd3 .nv-boxplot circle:hover{fill-opacity:1}.nvd3 .nv-boxplot rect:hover{fill-opacity:1}.nvd3 line.nv-boxplot-median{stroke:#000}.nv-boxplot-tick:hover{stroke-width:2.5px}.nvd3.nv-bullet{font:10px sans-serif}.nvd3.nv-bullet .nv-measure{fill-opacity:.8}.nvd3.nv-bullet .nv-measure:hover{fill-opacity:1}.nvd3.nv-bullet .nv-marker{stroke:#000;stroke-width:2px}.nvd3.nv-bullet .nv-markerTriangle{stroke:#000;fill:#fff;stroke-width:1.5px}.nvd3.nv-bullet .nv-tick line{stroke:#666;stroke-width:.5px}.nvd3.nv-bullet .nv-range.nv-s0{fill:#eee}.nvd3.nv-bullet .nv-range.nv-s1{fill:#ddd}.nvd3.nv-bullet .nv-range.nv-s2{fill:#ccc}.nvd3.nv-bullet .nv-title{font-size:14px;font-weight:700}.nvd3.nv-bullet .nv-subtitle{fill:#999}.nvd3.nv-bullet .nv-range{fill:#bababa;fill-opacity:.4}.nvd3.nv-bullet .nv-range:hover{fill-opacity:.7}.nvd3.nv-candlestickBar .nv-ticks .nv-tick{stroke-width:1px}.nvd3.nv-candlestickBar .nv-ticks .nv-tick.hover{stroke-width:2px}.nvd3.nv-candlestickBar .nv-ticks .nv-tick.positive rect{stroke:#2ca02c;fill:#2ca02c}.nvd3.nv-candlestickBar .nv-ticks .nv-tick.negative rect{stroke:#d62728;fill:#d62728}.with-transitions .nv-candlestickBar .nv-ticks .nv-tick{transition:stroke-width 250ms linear,stroke-opacity 250ms linear;-moz-transition:stroke-width 250ms linear,stroke-opacity 250ms linear;-webkit-transition:stroke-width 250ms linear,stroke-opacity 250ms linear}.nvd3.nv-candlestickBar .nv-ticks line{stroke:#333}.nvd3 .nv-legend .nv-disabled rect{}.nvd3 .nv-check-box .nv-box{fill-opacity:0;stroke-width:2}.nvd3 .nv-check-box .nv-check{fill-opacity:0;stroke-width:4}.nvd3 .nv-series.nv-disabled .nv-check-box .nv-check{fill-opacity:0;stroke-opacity:0}.nvd3 .nv-controlsWrap .nv-legend .nv-check-box .nv-check{opacity:0}.nvd3.nv-linePlusBar .nv-bar rect{fill-opacity:.75}.nvd3.nv-linePlusBar .nv-bar rect:hover{fill-opacity:1}.nvd3 .nv-groups path.nv-line{fill:none}.nvd3 .nv-groups path.nv-area{stroke:none}.nvd3.nv-line .nvd3.nv-scatter .nv-groups .nv-point{fill-opacity:0;stroke-opacity:0}.nvd3.nv-scatter.nv-single-point .nv-groups .nv-point{fill-opacity:.5!important;stroke-opacity:.5!important}.with-transitions .nvd3 .nv-groups .nv-point{transition:stroke-width 250ms linear,stroke-opacity 250ms linear;-moz-transition:stroke-width 250ms linear,stroke-opacity 250ms linear;-webkit-transition:stroke-width 250ms linear,stroke-opacity 250ms linear}.nvd3.nv-scatter .nv-groups .nv-point.hover,.nvd3 .nv-groups .nv-point.hover{stroke-width:7px;fill-opacity:.95!important;stroke-opacity:.95!important}.nvd3 .nv-point-paths path{stroke:#aaa;stroke-opacity:0;fill:#eee;fill-opacity:0}.nvd3 .nv-indexLine{cursor:ew-resize}svg.nvd3-svg{-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-ms-user-select:none;-moz-user-select:none;user-select:none;display:block;width:100%;height:100%}.nvtooltip.with-3d-shadow,.with-3d-shadow .nvtooltip{-moz-box-shadow:0 5px 10px rgba(0,0,0,.2);-webkit-box-shadow:0 5px 10px rgba(0,0,0,.2);box-shadow:0 5px 10px rgba(0,0,0,.2);-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px}.nvd3 text{font:400 12px Arial}.nvd3 .title{font:700 14px Arial}.nvd3 .nv-background{fill:#fff;fill-opacity:0}.nvd3.nv-noData{font-size:18px;font-weight:700}.nv-brush .extent{fill-opacity:.125;shape-rendering:crispEdges}.nv-brush .resize path{fill:#eee;stroke:#666}.nvd3 .nv-legend .nv-series{cursor:pointer}.nvd3 .nv-legend .nv-disabled circle{fill-opacity:0}.nvd3 .nv-brush .extent{fill-opacity:0!important}.nvd3 .nv-brushBackground rect{stroke:#000;stroke-width:.4;fill:#fff;fill-opacity:.7}.nvd3.nv-ohlcBar .nv-ticks .nv-tick{stroke-width:1px}.nvd3.nv-ohlcBar .nv-ticks .nv-tick.hover{stroke-width:2px}.nvd3.nv-ohlcBar .nv-ticks .nv-tick.positive{stroke:#2ca02c}.nvd3.nv-ohlcBar .nv-ticks .nv-tick.negative{stroke:#d62728}.nvd3 .background path{fill:none;stroke:#EEE;stroke-opacity:.4;shape-rendering:crispEdges}.nvd3 .foreground path{fill:none;stroke-opacity:.7}.nvd3 .nv-parallelCoordinates-brush .extent{fill:#fff;fill-opacity:.6;stroke:gray;shape-rendering:crispEdges}.nvd3 .nv-parallelCoordinates .hover{fill-opacity:1;stroke-width:3px}.nvd3 .missingValuesline line{fill:none;stroke:#000;stroke-width:1;stroke-opacity:1;stroke-dasharray:5,5}.nvd3.nv-pie path{stroke-opacity:0;transition:fill-opacity 250ms linear,stroke-width 250ms linear,stroke-opacity 250ms linear;-moz-transition:fill-opacity 250ms linear,stroke-width 250ms linear,stroke-opacity 250ms linear;-webkit-transition:fill-opacity 250ms linear,stroke-width 250ms linear,stroke-opacity 250ms linear}.nvd3.nv-pie .nv-pie-title{font-size:24px;fill:rgba(19,196,249,.59)}.nvd3.nv-pie .nv-slice text{stroke:#000;stroke-width:0}.nvd3.nv-pie path{stroke:#fff;stroke-width:1px;stroke-opacity:1}.nvd3.nv-pie .hover path{fill-opacity:.7}.nvd3.nv-pie .nv-label{pointer-events:none}.nvd3.nv-pie .nv-label rect{fill-opacity:0;stroke-opacity:0}.nvd3 .nv-groups .nv-point.hover{stroke-width:20px;stroke-opacity:.5}.nvd3 .nv-scatter .nv-point.hover{fill-opacity:1}.nv-noninteractive{pointer-events:none}.nv-distx,.nv-disty{pointer-events:none}.nvd3.nv-sparkline path{fill:none}.nvd3.nv-sparklineplus g.nv-hoverValue{pointer-events:none}.nvd3.nv-sparklineplus .nv-hoverValue line{stroke:#333;stroke-width:1.5px}.nvd3.nv-sparklineplus,.nvd3.nv-sparklineplus g{pointer-events:all}.nvd3 .nv-hoverArea{fill-opacity:0;stroke-opacity:0}.nvd3.nv-sparklineplus .nv-xValue,.nvd3.nv-sparklineplus .nv-yValue{stroke-width:0;font-size:.9em;font-weight:400}.nvd3.nv-sparklineplus .nv-yValue{stroke:#f66}.nvd3.nv-sparklineplus .nv-maxValue{stroke:#2ca02c;fill:#2ca02c}.nvd3.nv-sparklineplus .nv-minValue{stroke:#d62728;fill:#d62728}.nvd3.nv-sparklineplus .nv-currentValue{font-weight:700;font-size:1.1em}.nvd3.nv-stackedarea path.nv-area{fill-opacity:.7;stroke-opacity:0;transition:fill-opacity 250ms linear,stroke-opacity 250ms linear;-moz-transition:fill-opacity 250ms linear,stroke-opacity 250ms linear;-webkit-transition:fill-opacity 250ms linear,stroke-opacity 250ms linear}.nvd3.nv-stackedarea path.nv-area.hover{fill-opacity:.9}.nvd3.nv-stackedarea .nv-groups .nv-point{stroke-opacity:0;fill-opacity:0}.nvtooltip{position:absolute;background-color:rgba(255,255,255,1);color:rgba(0,0,0,1);padding:1px;border:1px solid rgba(0,0,0,.2);z-index:10000;display:block;font-family:Arial;font-size:13px;text-align:left;pointer-events:none;white-space:nowrap;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.nvtooltip{background:rgba(255,255,255,.8);border:1px solid rgba(0,0,0,.5);border-radius:4px}.nvtooltip.with-transitions,.with-transitions .nvtooltip{transition:opacity 50ms linear;-moz-transition:opacity 50ms linear;-webkit-transition:opacity 50ms linear;transition-delay:200ms;-moz-transition-delay:200ms;-webkit-transition-delay:200ms}.nvtooltip.x-nvtooltip,.nvtooltip.y-nvtooltip{padding:8px}.nvtooltip h3{margin:0;padding:4px 14px;line-height:18px;font-weight:400;background-color:rgba(247,247,247,.75);color:rgba(0,0,0,1);text-align:center;border-bottom:1px solid #ebebeb;-webkit-border-radius:5px 5px 0 0;-moz-border-radius:5px 5px 0 0;border-radius:5px 5px 0 0}.nvtooltip p{margin:0;padding:5px 14px;text-align:center}.nvtooltip span{display:inline-block;margin:2px 0}.nvtooltip table{margin:6px;border-spacing:0}.nvtooltip table td{padding:2px 9px 2px 0;vertical-align:middle}.nvtooltip table td.key{font-weight:400}.nvtooltip table td.value{text-align:right;font-weight:700}.nvtooltip table tr.highlight td{padding:1px 9px 1px 0;border-bottom-style:solid;border-bottom-width:1px;border-top-style:solid;border-top-width:1px}.nvtooltip table td.legend-color-guide div{width:8px;height:8px;vertical-align:middle}.nvtooltip table td.legend-color-guide div{width:12px;height:12px;border:1px solid #999}.nvtooltip .footer{padding:3px;text-align:center}.nvtooltip-pending-removal{pointer-events:none;display:none}.nvd3 .nv-interactiveGuideLine{pointer-events:none}.nvd3 line.nv-guideline{stroke:#ccc}"/>
</config>
<config key="jsDependencies">
<entry key="numSettings" type="xint" value="2"/>
<config key="dependency_0">
<entry key="name" type="xstring" value="nvd3"/>
<entry key="path" type="xstring" value="js-lib/nvd3/nv.d3.v1_8_1.js"/>
<entry key="usesDefine" type="xboolean" value="false"/>
<entry key="exports" type="xstring" value="nv"/>
<config key="dependencies">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" value="D3_3.5.5_Debug"/>
</config>
<entry key="local" type="xboolean" value="true"/>
</config>
<config key="dependency_1">
<entry key="name" type="xstring" value="D3_3.5.5_Debug"/>
<entry key="path" type="xstring" value="js-lib/d3/d3.v3_5_5.js"/>
<entry key="usesDefine" type="xboolean" value="false"/>
<entry key="exports" type="xstring" isnull="true" value=""/>
<config key="dependencies">
<entry key="array-size" type="xint" value="0"/>
</config>
<entry key="local" type="xboolean" value="true"/>
</config>
</config>
<config key="cssDependencies">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" value="js-lib/nvd3/nv.d3.v1_8_1.css"/>
</config>
<entry key="new" type="xboolean" value="false"/>
<entry key="inView" type="xboolean" value="true"/>
<config key="tableIds">
<entry key="array-size" type="xint" value="1"/>
<entry key="0" type="xstring" isnull="true" value=""/>
</config>
<config key="variables">
<entry key="numSettings" type="xint" value="1"/>
<entry key="mapClass" type="xstring" value="string"/>
<entry key="key_0" type="xstring" value="knime.workspace"/>
<entry key="class_0" type="xstring" value="java.lang.String"/>
<entry key="value_0" type="xstring" value="C:\Users\Matthias\knime-workspace"/>
</config>
<config key="binaryFiles">
<entry key="numSettings" type="xint" value="0"/>
<entry key="mapClass" type="xstring" value="string"/>
</config>
<config key="options">
<entry key="numSettings" type="xint" value="18"/>
<entry key="mapClass" type="xstring" value="object"/>
<entry key="key_0" type="xstring" value="displayFullscreenButton"/>
<entry key="class_0" type="xstring" value="java.lang.Boolean"/>
<entry key="value_0" type="xboolean" value="true"/>
<entry key="key_1" type="xstring" value="enableHoleEdit"/>
<entry key="class_1" type="xstring" value="java.lang.Boolean"/>
<entry key="value_1" type="xboolean" value="true"/>
<entry key="key_2" type="xstring" value="svg"/>
<entry key="class_2" type="xstring" value="org.knime.dynamic.js.SettingsModelSVGOptions$JSONSVGOptions"/>
<config key="value_2">
<entry key="width" type="xint" value="600"/>
<entry key="height" type="xint" value="400"/>
<entry key="fullscreen" type="xboolean" value="true"/>
</config>
<entry key="key_3" type="xstring" value="legend"/>
<entry key="class_3" type="xstring" value="java.lang.Boolean"/>
<entry key="value_3" type="xboolean" value="true"/>
<entry key="key_4" type="xstring" value="enableInsideTitleEdit"/>
<entry key="class_4" type="xstring" value="java.lang.Boolean"/>
<entry key="value_4" type="xboolean" value="true"/>
<entry key="key_5" type="xstring" value="customColors"/>
<entry key="class_5" type="xstring" value="java.lang.Boolean"/>
<entry key="value_5" type="xboolean" value="false"/>
<entry key="key_6" type="xstring" value="enableTitleEdit"/>
<entry key="class_6" type="xstring" value="java.lang.Boolean"/>
<entry key="value_6" type="xboolean" value="true"/>
<entry key="key_7" type="xstring" value="enableDonutToggle"/>
<entry key="class_7" type="xstring" value="java.lang.Boolean"/>
<entry key="value_7" type="xboolean" value="true"/>
<entry key="key_8" type="xstring" value="enableLabelEdit"/>
<entry key="class_8" type="xstring" value="java.lang.Boolean"/>
<entry key="value_8" type="xboolean" value="true"/>
<entry key="key_9" type="xstring" value="enableSwitchMissValCat"/>
<entry key="class_9" type="xstring" value="java.lang.Boolean"/>
<entry key="value_9" type="xboolean" value="true"/>
<entry key="key_10" type="xstring" value="reportOnMissingValues"/>
<entry key="class_10" type="xstring" value="java.lang.Boolean"/>
<entry key="value_10" type="xboolean" value="true"/>
<entry key="key_11" type="xstring" value="labelThreshold"/>
<entry key="class_11" type="xstring" value="java.lang.Double"/>
<entry key="value_11" type="xdouble" value="0.05"/>
<entry key="key_12" type="xstring" value="cat"/>
<entry key="class_12" type="xstring" value="java.lang.String"/>
<entry key="value_12" type="xstring" value="length [Binned]"/>
<entry key="key_13" type="xstring" value="enableViewControls"/>
<entry key="class_13" type="xstring" value="java.lang.Boolean"/>
<entry key="value_13" type="xboolean" value="true"/>
<entry key="key_14" type="xstring" value="enableColumnChooser"/>
<entry key="class_14" type="xstring" value="java.lang.Boolean"/>
<entry key="value_14" type="xboolean" value="true"/>
<entry key="key_15" type="xstring" value="showWarnings"/>
<entry key="class_15" type="xstring" value="java.lang.Boolean"/>
<entry key="value_15" type="xboolean" value="true"/>
<entry key="key_16" type="xstring" value="enableSubtitleEdit"/>
<entry key="class_16" type="xstring" value="java.lang.Boolean"/>
<entry key="value_16" type="xboolean" value="true"/>
<entry key="key_17" type="xstring" value="aggr"/>
<entry key="class_17" type="xstring" value="java.lang.String"/>
<entry key="value_17" type="xstring" value="Occurence Count"/>
</config>
<config key="inObjects">
<entry key="numSettings" type="xint" value="1"/>
<config key="inObject_0">
<entry key="knimeDataTableJSON" type="xstring" value="{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTable&quot;,&quot;id&quot;:&quot;d6aa35c2-fe19-40e3-94bb-e85754444f46&quot;,&quot;extensions&quot;:null,&quot;rows&quot;:[{&quot;data&quot;:[&quot;(172.6,259.4]&quot;,28.0],&quot;rowKey&quot;:&quot;Row0&quot;},{&quot;data&quot;:[&quot;(85.8,172.6]&quot;,45.0],&quot;rowKey&quot;:&quot;Row3&quot;},{&quot;data&quot;:[&quot;[-1,85.8]&quot;,126.0],&quot;rowKey&quot;:&quot;Row4&quot;},{&quot;data&quot;:[&quot;(346.2,433]&quot;,20.0],&quot;rowKey&quot;:&quot;Row2&quot;},{&quot;data&quot;:[&quot;(259.4,346.2]&quot;,16.0],&quot;rowKey&quot;:&quot;Row1&quot;}],&quot;spec&quot;:{&quot;@class&quot;:&quot;org.knime.js.core.JSONDataTableSpec&quot;,&quot;numColumns&quot;:2,&quot;numRows&quot;:5,&quot;filterIds&quot;:[null,null],&quot;minValues&quot;:[&quot;(172.6,259.4]&quot;,16.0],&quot;maxValues&quot;:[&quot;[-1,85.8]&quot;,126.0],&quot;numExtensions&quot;:0,&quot;knimeTypes&quot;:[&quot;String&quot;,&quot;Number (integer)&quot;],&quot;colNames&quot;:[&quot;length [Binned]&quot;,&quot;length [Binned]_1&quot;],&quot;colorModels&quot;:[],&quot;rowColorValues&quot;:[&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;,&quot;#404040&quot;],&quot;containsMissingValues&quot;:[false,false],&quot;extensionNames&quot;:[],&quot;extensionTypes&quot;:[],&quot;possibleValues&quot;:[[&quot;(172.6,259.4]&quot;,&quot;(85.8,172.6]&quot;,&quot;[-1,85.8]&quot;,&quot;(346.2,433]&quot;,&quot;(259.4,346.2]&quot;],null],&quot;colTypes&quot;:[&quot;string&quot;,&quot;number&quot;]}}"/>
</config>
</config>
<entry key="warnMessage" type="xstring" value=""/>
<entry key="errorMessage" type="xstring" value=""/>
</config>
